name: Develop Workflow

on:
    push:
        branches: ["develop"]

permissions:
    contents: write

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup .NET Core
              uses: actions/setup-dotnet@v3
              with:
                dotnet-version: '8.0.x'

            - name: Restore dependencies
              run: dotnet restore
              working-directory: src

            - name: Build solution
              run: dotnet build --configuration Release --no-restore
              working-directory: src

    unit_test:
        name: Unit Tests
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup .NET Core
              uses: actions/setup-dotnet@v3
              with:
                dotnet-version: '8.0.x'

            - name: Restore dependencies
              run: dotnet restore
              working-directory: tests/Postech.PhaseOne.GroupEight.TechChallenge.UnitTests

            - name: Build test project
              run: dotnet build --no-restore
              working-directory: tests/Postech.PhaseOne.GroupEight.TechChallenge.UnitTests

            - name: Run tests
              run: dotnet test --verbosity normal
              working-directory: tests/Postech.PhaseOne.GroupEight.TechChallenge.UnitTests

    functional_test:
        name: Functional Tests
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup .NET Core
              uses: actions/setup-dotnet@v3

            - name: Restore dependencies
              run: dotnet restore
              working-directory: tests/Postech.PhaseOne.GroupEight.TechChallenge.FunctionalTests

            - name: Build test project
              run: dotnet build --no-restore
              working-directory: tests/Postech.PhaseOne.GroupEight.TechChallenge.FunctionalTests

            - name: Run tests
              run: dotnet test --verbosity normal
              working-directory: tests/Postech.PhaseOne.GroupEight.TechChallenge.FunctionalTests

    sonarcloud:
      name: SonarCloud Scan
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Setup .NET
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: '8.0.x'
        
        - name: Restore dependencies
          run: dotnet restore
          working-directory: src

        - name: Build solution
          run: dotnet build --configuration Release --no-restore
          working-directory: src

        - name: Solution Scan
          env:
            SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
          working-directory: src
          run: |
            dotnet tool install --global dotnet-sonarscanner
            export PATH="$PATH:/home/runner/.dotnet/tools"
            dotnet tool install --global dotnet-coverage
            dotnet sonarscanner begin /k:"lucasdirani_GithubActionsTest" /o:"tech-challenge-arquitetura-sistemas-net" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
            dotnet build --no-incremental
            dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
            dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"